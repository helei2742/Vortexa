<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.vortexa.bot_platform.mapper.AccountBaseInfoMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.com.vortexa.common.entity.AccountBaseInfo">
        <id column="id" property="id"/>
        <result column="type" property="type"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="password" property="password"/>
        <result column="params" property="params"/>
        <result column="insert_datetime" property="insertDatetime"/>
        <result column="update_datetime" property="updateDatetime"/>
        <result column="is_valid" property="isValid"/>
    </resultMap>

    <insert id="insertOrUpdate" parameterType="cn.com.vortexa.common.entity.AccountBaseInfo">
        INSERT INTO t_account_base_info
        (id, type, name, email, password, params, insert_datetime, update_datetime, is_valid)
        VALUES (NULL, #{type}, #{name}, #{email}, #{password}, #{params}, #{insertDatetime}, #{updateDatetime},
                #{isValid}) ON CONFLICT(email)
        DO
        UPDATE SET
            type = excluded.type,
            name = excluded.name,
            password = excluded.password,
            params = excluded.params,
            update_datetime = excluded.update_datetime
    </insert>

    <select id="multipleConditionQuery"
            parameterType="cn.com.vortexa.common.entity.AccountBaseInfo"
            resultType="cn.com.vortexa.common.entity.AccountBaseInfo">
        select
        t.id, t.type, t.name, t.email, t.password, t.params,
        t.insert_datetime as insertDatetime,
        t.update_datetime as updateDatetime,
        t.is_valid as isValid
        from
        t_account_base_info as t
        <if test="params != null and !params.isEmpty()">
            left join json_each(t.params) json_each
        </if>
        <where>
             is_valid = 1
        <if test="id != null">
            and t.id = #{id}
        </if>
        <if test="type != null">
            and t.type = #{type}
        </if>
        <if test="name != null">
            and t.name = #{name}
        </if>
        <if test="email != null">
            and t.email = #{email}
        </if>
        <if test="password != null">
            and t.password = #{password}
        </if>
        <if test="params != null and !params.isEmpty()">
            and
            <foreach collection="params" item='entry' index='key' separator='AND'>
                json_each.key = #{key} and json_each.value = #{entry}
            </foreach>
        </if>
        </where>
    </select>

</mapper>
